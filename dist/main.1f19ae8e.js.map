{"version":3,"sources":["main.js"],"names":["html","document","querySelector","style","string","string_2","n","step","setTimeout","innerHTML","substring","window","scrollTo","length"],"mappings":"AAAA,IAAIA,IAAI,GAAGC,QAAQ,CAACC,aAAT,CAAuB,OAAvB,CAAX;AACA,IAAIC,KAAK,GAAGF,QAAQ,CAACC,aAAT,CAAuB,QAAvB,CAAZ;AACA,IAAIE,MAAM,g8DAAV,EA4DA;AAEA;;AACA,IAAIC,QAAQ,GAAG,EAAf;AACA,IAAIC,CAAC,GAAG,CAAR;;AAEA,IAAIC,IAAI,GAAG,SAAPA,IAAO,GAAM;AACb;AACAC,EAAAA,UAAU,CAAC,YAAM;AACb;AACA;AACA;AACA,QAAIJ,MAAM,CAACE,CAAD,CAAN,KAAc,IAAlB,EAAwB;AACpBD,MAAAA,QAAQ,IAAI,MAAZ;AACH,KAFD,MAEO,IAAID,MAAM,CAACE,CAAD,CAAN,KAAc,GAAlB,EAAuB;AAC1BD,MAAAA,QAAQ,IAAI,QAAZ;AACH,KAFM,MAEA;AACHA,MAAAA,QAAQ,IAAID,MAAM,CAACE,CAAD,CAAlB;AACH;;AAEDN,IAAAA,IAAI,CAACS,SAAL,GAAiBJ,QAAjB;AACAF,IAAAA,KAAK,CAACM,SAAN,GAAkBL,MAAM,CAACM,SAAP,CAAiB,CAAjB,EAAoBJ,CAApB,CAAlB;AAEAK,IAAAA,MAAM,CAACC,QAAP,CAAgB,CAAhB,EAAmB,IAAnB;AACAZ,IAAAA,IAAI,CAACY,QAAL,CAAc,CAAd,EAAiB,IAAjB;;AAEA,QAAIN,CAAC,GAAGF,MAAM,CAACS,MAAP,GAAgB,CAAxB,EAA2B;AACvB;AACAP,MAAAA,CAAC;AACDC,MAAAA,IAAI;AACP;AACJ,GAvBS,EAuBP,CAvBO,CAAV;AAwBH,CA1BD;;AA4BAA,IAAI","file":"main.1f19ae8e.js","sourceRoot":"../src","sourcesContent":["let html = document.querySelector('#html')\nlet style = document.querySelector('#style')\nlet string = `\n/* 你好,我是小刘\n * 一名前端新人\n * 接下来我要演示一个效果\n * 首先准备一个div\n */\n#div-1 {\n    border: 1px solid red;\n    width: 200px;\n    height: 200px;\n}\n/* \n * 接下来 准备把div变为一个八卦图\n * 注意看\n * 首先div变为一个圆形\n */\n#div-1 {\n    border-radius: 50%;\n    box-shadow: 0 0 3px rgba(0, 0, 0, 0.5);\n    border: none;\n}\n/* \n * 接下来 准备处理八卦图的两个渐变区域\n * 注意看\n * 首先使用背景渐变\n */\n#div-1 {\n    background: linear-gradient(90deg, rgba(255, 255, 255, 1) 0%, rgba(255, 255, 255, 1) 50%, rgba(0, 0, 0, 1) 50%, rgba(0, 0, 0, 1) 100%);\n}\n/* \n * 接下来 使用伪元素设置两个圆形的交界区域\n */\n#div-1::before {\n    content: '';display: block;position: absolute;width: 100px;height: 100px;\n    top: 0;\n    left: 50%;\n    transform: translateX(-50%);\n    background: #000;\n    border-radius: 50%;\n}\n\n#div-1::after {\n    content: '';display: block;position: absolute;width: 100px;height: 100px;\n    bottom: 0;\n    left: 50%;\n    transform: translateX(-50%);\n    background: #fff;\n    border-radius: 50%;\n}\n/* \n * 接下来 \n * 使用径向渐变设置两个黑白互相渗透的圆形区域\n */\n#div-1::before {\n    background: radial-gradient(circle, rgba(255, 255, 255, 1) 0%, rgba(255, 255, 255, 1) 25%, rgba(0, 0, 0, 1) 25%, rgba(0, 0, 0, 1) 100%) \n}\n#div-1::after {\n    background: radial-gradient(circle, rgba(0, 0, 0, 1) 0%, rgba(0, 0, 0, 1) 25%, rgba(255, 255, 255, 1) 25%, rgba(255, 255, 255, 1) 100%, rgba(0, 0, 0, 1) 100%)\n}\n`\n// string 中的 css 代码如何生效\n\n// 缓存显示在屏幕上的文字\nlet string_2 = ''\nlet n = 1\n\nlet step = () => {\n    // 0.1s 增加 1次\n    setTimeout(() => {\n        // 如果是回车\n        // 如果不是回车照搬\n        // 如果是代码的空格 添加 &nbsp;\n        if (string[n] === '\\n') {\n            string_2 += '<br>'    \n        } else if (string[n] === ' ') {\n            string_2 += '&nbsp;'\n        } else {\n            string_2 += string[n]\n        }\n\n        html.innerHTML = string_2\n        style.innerHTML = string.substring(0, n)\n\n        window.scrollTo(0, 9999)\n        html.scrollTo(0, 9999)\n\n        if (n < string.length - 1) {\n            // 如果n不是最后一个 就继续\n            n++ \n            step()\n        }\n    } ,0)    \n}\n\nstep()\n\n\n\n\n\n\n"]}